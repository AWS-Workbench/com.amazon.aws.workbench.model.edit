/**
 */
package ec2.provider;

import ec2.util.Ec2AdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Ec2ItemProviderAdapterFactory extends Ec2AdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Ec2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GenericLinuxImageBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericLinuxImageBuilder_ec2ItemProvider genericLinuxImageBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GenericLinuxImageBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericLinuxImageBuilder_ec2Adapter() {
		if (genericLinuxImageBuilder_ec2ItemProvider == null) {
			genericLinuxImageBuilder_ec2ItemProvider = new GenericLinuxImageBuilder_ec2ItemProvider(this);
		}

		return genericLinuxImageBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AclTrafficConfigBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AclTrafficConfigBuilder_ec2ItemProvider aclTrafficConfigBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AclTrafficConfigBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAclTrafficConfigBuilder_ec2Adapter() {
		if (aclTrafficConfigBuilder_ec2ItemProvider == null) {
			aclTrafficConfigBuilder_ec2ItemProvider = new AclTrafficConfigBuilder_ec2ItemProvider(this);
		}

		return aclTrafficConfigBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GenericWindowsImageBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericWindowsImageBuilder_ec2ItemProvider genericWindowsImageBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GenericWindowsImageBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericWindowsImageBuilder_ec2Adapter() {
		if (genericWindowsImageBuilder_ec2ItemProvider == null) {
			genericWindowsImageBuilder_ec2ItemProvider = new GenericWindowsImageBuilder_ec2ItemProvider(this);
		}

		return genericWindowsImageBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InterfaceVpcEndpointAttributesBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceVpcEndpointAttributesBuilder_ec2ItemProvider interfaceVpcEndpointAttributesBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InterfaceVpcEndpointAttributesBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceVpcEndpointAttributesBuilder_ec2Adapter() {
		if (interfaceVpcEndpointAttributesBuilder_ec2ItemProvider == null) {
			interfaceVpcEndpointAttributesBuilder_ec2ItemProvider = new InterfaceVpcEndpointAttributesBuilder_ec2ItemProvider(
					this);
		}

		return interfaceVpcEndpointAttributesBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcAttributesBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcAttributesBuilder_ec2ItemProvider vpcAttributesBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcAttributesBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcAttributesBuilder_ec2Adapter() {
		if (vpcAttributesBuilder_ec2ItemProvider == null) {
			vpcAttributesBuilder_ec2ItemProvider = new VpcAttributesBuilder_ec2ItemProvider(this);
		}

		return vpcAttributesBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.ExecuteFileOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecuteFileOptionsBuilder_ec2ItemProvider executeFileOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.ExecuteFileOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecuteFileOptionsBuilder_ec2Adapter() {
		if (executeFileOptionsBuilder_ec2ItemProvider == null) {
			executeFileOptionsBuilder_ec2ItemProvider = new ExecuteFileOptionsBuilder_ec2ItemProvider(this);
		}

		return executeFileOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.EbsDeviceOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EbsDeviceOptionsBuilder_ec2ItemProvider ebsDeviceOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.EbsDeviceOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEbsDeviceOptionsBuilder_ec2Adapter() {
		if (ebsDeviceOptionsBuilder_ec2ItemProvider == null) {
			ebsDeviceOptionsBuilder_ec2ItemProvider = new EbsDeviceOptionsBuilder_ec2ItemProvider(this);
		}

		return ebsDeviceOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.EnableVpnGatewayOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableVpnGatewayOptionsBuilder_ec2ItemProvider enableVpnGatewayOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.EnableVpnGatewayOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnableVpnGatewayOptionsBuilder_ec2Adapter() {
		if (enableVpnGatewayOptionsBuilder_ec2ItemProvider == null) {
			enableVpnGatewayOptionsBuilder_ec2ItemProvider = new EnableVpnGatewayOptionsBuilder_ec2ItemProvider(this);
		}

		return enableVpnGatewayOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcLookupOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcLookupOptionsBuilder_ec2ItemProvider vpcLookupOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcLookupOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcLookupOptionsBuilder_ec2Adapter() {
		if (vpcLookupOptionsBuilder_ec2ItemProvider == null) {
			vpcLookupOptionsBuilder_ec2ItemProvider = new VpcLookupOptionsBuilder_ec2ItemProvider(this);
		}

		return vpcLookupOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InstanceBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceBuilder_ec2ItemProvider instanceBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InstanceBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceBuilder_ec2Adapter() {
		if (instanceBuilder_ec2ItemProvider == null) {
			instanceBuilder_ec2ItemProvider = new InstanceBuilder_ec2ItemProvider(this);
		}

		return instanceBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetSelectionBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetSelectionBuilder_ec2ItemProvider subnetSelectionBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetSelectionBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetSelectionBuilder_ec2Adapter() {
		if (subnetSelectionBuilder_ec2ItemProvider == null) {
			subnetSelectionBuilder_ec2ItemProvider = new SubnetSelectionBuilder_ec2ItemProvider(this);
		}

		return subnetSelectionBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SecurityGroupPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityGroupPropsBuilder_ec2ItemProvider securityGroupPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SecurityGroupPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityGroupPropsBuilder_ec2Adapter() {
		if (securityGroupPropsBuilder_ec2ItemProvider == null) {
			securityGroupPropsBuilder_ec2ItemProvider = new SecurityGroupPropsBuilder_ec2ItemProvider(this);
		}

		return securityGroupPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AclPortRangeBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AclPortRangeBuilder_ec2ItemProvider aclPortRangeBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AclPortRangeBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAclPortRangeBuilder_ec2Adapter() {
		if (aclPortRangeBuilder_ec2ItemProvider == null) {
			aclPortRangeBuilder_ec2ItemProvider = new AclPortRangeBuilder_ec2ItemProvider(this);
		}

		return aclPortRangeBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GenericWindowsImagePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericWindowsImagePropsBuilder_ec2ItemProvider genericWindowsImagePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GenericWindowsImagePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericWindowsImagePropsBuilder_ec2Adapter() {
		if (genericWindowsImagePropsBuilder_ec2ItemProvider == null) {
			genericWindowsImagePropsBuilder_ec2ItemProvider = new GenericWindowsImagePropsBuilder_ec2ItemProvider(this);
		}

		return genericWindowsImagePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcEndpointServicePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcEndpointServicePropsBuilder_ec2ItemProvider vpcEndpointServicePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcEndpointServicePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcEndpointServicePropsBuilder_ec2Adapter() {
		if (vpcEndpointServicePropsBuilder_ec2ItemProvider == null) {
			vpcEndpointServicePropsBuilder_ec2ItemProvider = new VpcEndpointServicePropsBuilder_ec2ItemProvider(this);
		}

		return vpcEndpointServicePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.WindowsImageBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WindowsImageBuilder_ec2ItemProvider windowsImageBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.WindowsImageBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWindowsImageBuilder_ec2Adapter() {
		if (windowsImageBuilder_ec2ItemProvider == null) {
			windowsImageBuilder_ec2ItemProvider = new WindowsImageBuilder_ec2ItemProvider(this);
		}

		return windowsImageBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.FlowLogOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowLogOptionsBuilder_ec2ItemProvider flowLogOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.FlowLogOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowLogOptionsBuilder_ec2Adapter() {
		if (flowLogOptionsBuilder_ec2ItemProvider == null) {
			flowLogOptionsBuilder_ec2ItemProvider = new FlowLogOptionsBuilder_ec2ItemProvider(this);
		}

		return flowLogOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PrivateSubnetBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivateSubnetBuilder_ec2ItemProvider privateSubnetBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PrivateSubnetBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivateSubnetBuilder_ec2Adapter() {
		if (privateSubnetBuilder_ec2ItemProvider == null) {
			privateSubnetBuilder_ec2ItemProvider = new PrivateSubnetBuilder_ec2ItemProvider(this);
		}

		return privateSubnetBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.BastionHostLinuxBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BastionHostLinuxBuilder_ec2ItemProvider bastionHostLinuxBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.BastionHostLinuxBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBastionHostLinuxBuilder_ec2Adapter() {
		if (bastionHostLinuxBuilder_ec2ItemProvider == null) {
			bastionHostLinuxBuilder_ec2ItemProvider = new BastionHostLinuxBuilder_ec2ItemProvider(this);
		}

		return bastionHostLinuxBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SelectedSubnetsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectedSubnetsBuilder_ec2ItemProvider selectedSubnetsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SelectedSubnetsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectedSubnetsBuilder_ec2Adapter() {
		if (selectedSubnetsBuilder_ec2ItemProvider == null) {
			selectedSubnetsBuilder_ec2ItemProvider = new SelectedSubnetsBuilder_ec2ItemProvider(this);
		}

		return selectedSubnetsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnGatewayPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnGatewayPropsBuilder_ec2ItemProvider vpnGatewayPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnGatewayPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnGatewayPropsBuilder_ec2Adapter() {
		if (vpnGatewayPropsBuilder_ec2ItemProvider == null) {
			vpnGatewayPropsBuilder_ec2ItemProvider = new VpnGatewayPropsBuilder_ec2ItemProvider(this);
		}

		return vpnGatewayPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetConfigurationBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetConfigurationBuilder_ec2ItemProvider subnetConfigurationBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetConfigurationBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetConfigurationBuilder_ec2Adapter() {
		if (subnetConfigurationBuilder_ec2ItemProvider == null) {
			subnetConfigurationBuilder_ec2ItemProvider = new SubnetConfigurationBuilder_ec2ItemProvider(this);
		}

		return subnetConfigurationBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnTunnelOptionBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnTunnelOptionBuilder_ec2ItemProvider vpnTunnelOptionBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnTunnelOptionBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnTunnelOptionBuilder_ec2Adapter() {
		if (vpnTunnelOptionBuilder_ec2ItemProvider == null) {
			vpnTunnelOptionBuilder_ec2ItemProvider = new VpnTunnelOptionBuilder_ec2ItemProvider(this);
		}

		return vpnTunnelOptionBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AclCidrConfigBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AclCidrConfigBuilder_ec2ItemProvider aclCidrConfigBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AclCidrConfigBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAclCidrConfigBuilder_ec2Adapter() {
		if (aclCidrConfigBuilder_ec2ItemProvider == null) {
			aclCidrConfigBuilder_ec2ItemProvider = new AclCidrConfigBuilder_ec2ItemProvider(this);
		}

		return aclCidrConfigBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PublicSubnetPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicSubnetPropsBuilder_ec2ItemProvider publicSubnetPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PublicSubnetPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicSubnetPropsBuilder_ec2Adapter() {
		if (publicSubnetPropsBuilder_ec2ItemProvider == null) {
			publicSubnetPropsBuilder_ec2ItemProvider = new PublicSubnetPropsBuilder_ec2ItemProvider(this);
		}

		return publicSubnetPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NatInstanceProviderBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NatInstanceProviderBuilder_ec2ItemProvider natInstanceProviderBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NatInstanceProviderBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNatInstanceProviderBuilder_ec2Adapter() {
		if (natInstanceProviderBuilder_ec2ItemProvider == null) {
			natInstanceProviderBuilder_ec2ItemProvider = new NatInstanceProviderBuilder_ec2ItemProvider(this);
		}

		return natInstanceProviderBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GatewayConfigBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatewayConfigBuilder_ec2ItemProvider gatewayConfigBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GatewayConfigBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGatewayConfigBuilder_ec2Adapter() {
		if (gatewayConfigBuilder_ec2ItemProvider == null) {
			gatewayConfigBuilder_ec2ItemProvider = new GatewayConfigBuilder_ec2ItemProvider(this);
		}

		return gatewayConfigBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GenericLinuxImagePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericLinuxImagePropsBuilder_ec2ItemProvider genericLinuxImagePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GenericLinuxImagePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericLinuxImagePropsBuilder_ec2Adapter() {
		if (genericLinuxImagePropsBuilder_ec2ItemProvider == null) {
			genericLinuxImagePropsBuilder_ec2ItemProvider = new GenericLinuxImagePropsBuilder_ec2ItemProvider(this);
		}

		return genericLinuxImagePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcPropsBuilder_ec2ItemProvider vpcPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcPropsBuilder_ec2Adapter() {
		if (vpcPropsBuilder_ec2ItemProvider == null) {
			vpcPropsBuilder_ec2ItemProvider = new VpcPropsBuilder_ec2ItemProvider(this);
		}

		return vpcPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.BastionHostLinuxPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BastionHostLinuxPropsBuilder_ec2ItemProvider bastionHostLinuxPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.BastionHostLinuxPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBastionHostLinuxPropsBuilder_ec2Adapter() {
		if (bastionHostLinuxPropsBuilder_ec2ItemProvider == null) {
			bastionHostLinuxPropsBuilder_ec2ItemProvider = new BastionHostLinuxPropsBuilder_ec2ItemProvider(this);
		}

		return bastionHostLinuxPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetNetworkAclAssociationPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetNetworkAclAssociationPropsBuilder_ec2ItemProvider subnetNetworkAclAssociationPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetNetworkAclAssociationPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetNetworkAclAssociationPropsBuilder_ec2Adapter() {
		if (subnetNetworkAclAssociationPropsBuilder_ec2ItemProvider == null) {
			subnetNetworkAclAssociationPropsBuilder_ec2ItemProvider = new SubnetNetworkAclAssociationPropsBuilder_ec2ItemProvider(
					this);
		}

		return subnetNetworkAclAssociationPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnGatewayBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnGatewayBuilder_ec2ItemProvider vpnGatewayBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnGatewayBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnGatewayBuilder_ec2Adapter() {
		if (vpnGatewayBuilder_ec2ItemProvider == null) {
			vpnGatewayBuilder_ec2ItemProvider = new VpnGatewayBuilder_ec2ItemProvider(this);
		}

		return vpnGatewayBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AmazonLinuxImageBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonLinuxImageBuilder_ec2ItemProvider amazonLinuxImageBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AmazonLinuxImageBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonLinuxImageBuilder_ec2Adapter() {
		if (amazonLinuxImageBuilder_ec2ItemProvider == null) {
			amazonLinuxImageBuilder_ec2ItemProvider = new AmazonLinuxImageBuilder_ec2ItemProvider(this);
		}

		return amazonLinuxImageBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.FlowLogPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowLogPropsBuilder_ec2ItemProvider flowLogPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.FlowLogPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowLogPropsBuilder_ec2Adapter() {
		if (flowLogPropsBuilder_ec2ItemProvider == null) {
			flowLogPropsBuilder_ec2ItemProvider = new FlowLogPropsBuilder_ec2ItemProvider(this);
		}

		return flowLogPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InterfaceVpcEndpointPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceVpcEndpointPropsBuilder_ec2ItemProvider interfaceVpcEndpointPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InterfaceVpcEndpointPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceVpcEndpointPropsBuilder_ec2Adapter() {
		if (interfaceVpcEndpointPropsBuilder_ec2ItemProvider == null) {
			interfaceVpcEndpointPropsBuilder_ec2ItemProvider = new InterfaceVpcEndpointPropsBuilder_ec2ItemProvider(
					this);
		}

		return interfaceVpcEndpointPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnConnectionOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnConnectionOptionsBuilder_ec2ItemProvider vpnConnectionOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnConnectionOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnConnectionOptionsBuilder_ec2Adapter() {
		if (vpnConnectionOptionsBuilder_ec2ItemProvider == null) {
			vpnConnectionOptionsBuilder_ec2ItemProvider = new VpnConnectionOptionsBuilder_ec2ItemProvider(this);
		}

		return vpnConnectionOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PortBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortBuilder_ec2ItemProvider portBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PortBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortBuilder_ec2Adapter() {
		if (portBuilder_ec2ItemProvider == null) {
			portBuilder_ec2ItemProvider = new PortBuilder_ec2ItemProvider(this);
		}

		return portBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.FlowLogDestinationConfigBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowLogDestinationConfigBuilder_ec2ItemProvider flowLogDestinationConfigBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.FlowLogDestinationConfigBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowLogDestinationConfigBuilder_ec2Adapter() {
		if (flowLogDestinationConfigBuilder_ec2ItemProvider == null) {
			flowLogDestinationConfigBuilder_ec2ItemProvider = new FlowLogDestinationConfigBuilder_ec2ItemProvider(this);
		}

		return flowLogDestinationConfigBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AmazonLinuxImagePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AmazonLinuxImagePropsBuilder_ec2ItemProvider amazonLinuxImagePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AmazonLinuxImagePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAmazonLinuxImagePropsBuilder_ec2Adapter() {
		if (amazonLinuxImagePropsBuilder_ec2ItemProvider == null) {
			amazonLinuxImagePropsBuilder_ec2ItemProvider = new AmazonLinuxImagePropsBuilder_ec2ItemProvider(this);
		}

		return amazonLinuxImagePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.LookupMachineImagePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LookupMachineImagePropsBuilder_ec2ItemProvider lookupMachineImagePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.LookupMachineImagePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLookupMachineImagePropsBuilder_ec2Adapter() {
		if (lookupMachineImagePropsBuilder_ec2ItemProvider == null) {
			lookupMachineImagePropsBuilder_ec2ItemProvider = new LookupMachineImagePropsBuilder_ec2ItemProvider(this);
		}

		return lookupMachineImagePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.EbsDeviceSnapshotOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EbsDeviceSnapshotOptionsBuilder_ec2ItemProvider ebsDeviceSnapshotOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.EbsDeviceSnapshotOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEbsDeviceSnapshotOptionsBuilder_ec2Adapter() {
		if (ebsDeviceSnapshotOptionsBuilder_ec2ItemProvider == null) {
			ebsDeviceSnapshotOptionsBuilder_ec2ItemProvider = new EbsDeviceSnapshotOptionsBuilder_ec2ItemProvider(this);
		}

		return ebsDeviceSnapshotOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnConnectionPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnConnectionPropsBuilder_ec2ItemProvider vpnConnectionPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnConnectionPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnConnectionPropsBuilder_ec2Adapter() {
		if (vpnConnectionPropsBuilder_ec2ItemProvider == null) {
			vpnConnectionPropsBuilder_ec2ItemProvider = new VpnConnectionPropsBuilder_ec2ItemProvider(this);
		}

		return vpnConnectionPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpnConnectionBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpnConnectionBuilder_ec2ItemProvider vpnConnectionBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpnConnectionBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpnConnectionBuilder_ec2Adapter() {
		if (vpnConnectionBuilder_ec2ItemProvider == null) {
			vpnConnectionBuilder_ec2ItemProvider = new VpnConnectionBuilder_ec2ItemProvider(this);
		}

		return vpnConnectionBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.BlockDeviceBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BlockDeviceBuilder_ec2ItemProvider blockDeviceBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.BlockDeviceBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBlockDeviceBuilder_ec2Adapter() {
		if (blockDeviceBuilder_ec2ItemProvider == null) {
			blockDeviceBuilder_ec2ItemProvider = new BlockDeviceBuilder_ec2ItemProvider(this);
		}

		return blockDeviceBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.EbsDevicePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EbsDevicePropsBuilder_ec2ItemProvider ebsDevicePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.EbsDevicePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEbsDevicePropsBuilder_ec2Adapter() {
		if (ebsDevicePropsBuilder_ec2ItemProvider == null) {
			ebsDevicePropsBuilder_ec2ItemProvider = new EbsDevicePropsBuilder_ec2ItemProvider(this);
		}

		return ebsDevicePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NetworkAclEntryPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkAclEntryPropsBuilder_ec2ItemProvider networkAclEntryPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NetworkAclEntryPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAclEntryPropsBuilder_ec2Adapter() {
		if (networkAclEntryPropsBuilder_ec2ItemProvider == null) {
			networkAclEntryPropsBuilder_ec2ItemProvider = new NetworkAclEntryPropsBuilder_ec2ItemProvider(this);
		}

		return networkAclEntryPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AddRouteOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddRouteOptionsBuilder_ec2ItemProvider addRouteOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AddRouteOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddRouteOptionsBuilder_ec2Adapter() {
		if (addRouteOptionsBuilder_ec2ItemProvider == null) {
			addRouteOptionsBuilder_ec2ItemProvider = new AddRouteOptionsBuilder_ec2ItemProvider(this);
		}

		return addRouteOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PublicSubnetBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicSubnetBuilder_ec2ItemProvider publicSubnetBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PublicSubnetBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicSubnetBuilder_ec2Adapter() {
		if (publicSubnetBuilder_ec2ItemProvider == null) {
			publicSubnetBuilder_ec2ItemProvider = new PublicSubnetBuilder_ec2ItemProvider(this);
		}

		return publicSubnetBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InterfaceVpcEndpointOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceVpcEndpointOptionsBuilder_ec2ItemProvider interfaceVpcEndpointOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InterfaceVpcEndpointOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceVpcEndpointOptionsBuilder_ec2Adapter() {
		if (interfaceVpcEndpointOptionsBuilder_ec2ItemProvider == null) {
			interfaceVpcEndpointOptionsBuilder_ec2ItemProvider = new InterfaceVpcEndpointOptionsBuilder_ec2ItemProvider(
					this);
		}

		return interfaceVpcEndpointOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.LinuxUserDataOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinuxUserDataOptionsBuilder_ec2ItemProvider linuxUserDataOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.LinuxUserDataOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinuxUserDataOptionsBuilder_ec2Adapter() {
		if (linuxUserDataOptionsBuilder_ec2ItemProvider == null) {
			linuxUserDataOptionsBuilder_ec2ItemProvider = new LinuxUserDataOptionsBuilder_ec2ItemProvider(this);
		}

		return linuxUserDataOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NetworkAclPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkAclPropsBuilder_ec2ItemProvider networkAclPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NetworkAclPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAclPropsBuilder_ec2Adapter() {
		if (networkAclPropsBuilder_ec2ItemProvider == null) {
			networkAclPropsBuilder_ec2ItemProvider = new NetworkAclPropsBuilder_ec2ItemProvider(this);
		}

		return networkAclPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PublicSubnetAttributesBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicSubnetAttributesBuilder_ec2ItemProvider publicSubnetAttributesBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PublicSubnetAttributesBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicSubnetAttributesBuilder_ec2Adapter() {
		if (publicSubnetAttributesBuilder_ec2ItemProvider == null) {
			publicSubnetAttributesBuilder_ec2ItemProvider = new PublicSubnetAttributesBuilder_ec2ItemProvider(this);
		}

		return publicSubnetAttributesBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.S3DownloadOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected S3DownloadOptionsBuilder_ec2ItemProvider s3DownloadOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.S3DownloadOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createS3DownloadOptionsBuilder_ec2Adapter() {
		if (s3DownloadOptionsBuilder_ec2ItemProvider == null) {
			s3DownloadOptionsBuilder_ec2ItemProvider = new S3DownloadOptionsBuilder_ec2ItemProvider(this);
		}

		return s3DownloadOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.FlowLogBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowLogBuilder_ec2ItemProvider flowLogBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.FlowLogBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowLogBuilder_ec2Adapter() {
		if (flowLogBuilder_ec2ItemProvider == null) {
			flowLogBuilder_ec2ItemProvider = new FlowLogBuilder_ec2ItemProvider(this);
		}

		return flowLogBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.ConnectionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionsBuilder_ec2ItemProvider connectionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.ConnectionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionsBuilder_ec2Adapter() {
		if (connectionsBuilder_ec2ItemProvider == null) {
			connectionsBuilder_ec2ItemProvider = new ConnectionsBuilder_ec2ItemProvider(this);
		}

		return connectionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcBuilder_ec2ItemProvider vpcBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcBuilder_ec2Adapter() {
		if (vpcBuilder_ec2ItemProvider == null) {
			vpcBuilder_ec2ItemProvider = new VpcBuilder_ec2ItemProvider(this);
		}

		return vpcBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.VpcEndpointServiceBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VpcEndpointServiceBuilder_ec2ItemProvider vpcEndpointServiceBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.VpcEndpointServiceBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVpcEndpointServiceBuilder_ec2Adapter() {
		if (vpcEndpointServiceBuilder_ec2ItemProvider == null) {
			vpcEndpointServiceBuilder_ec2ItemProvider = new VpcEndpointServiceBuilder_ec2ItemProvider(this);
		}

		return vpcEndpointServiceBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.ConnectionRuleBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionRuleBuilder_ec2ItemProvider connectionRuleBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.ConnectionRuleBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionRuleBuilder_ec2Adapter() {
		if (connectionRuleBuilder_ec2ItemProvider == null) {
			connectionRuleBuilder_ec2ItemProvider = new ConnectionRuleBuilder_ec2ItemProvider(this);
		}

		return connectionRuleBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetPropsBuilder_ec2ItemProvider subnetPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetPropsBuilder_ec2Adapter() {
		if (subnetPropsBuilder_ec2ItemProvider == null) {
			subnetPropsBuilder_ec2ItemProvider = new SubnetPropsBuilder_ec2ItemProvider(this);
		}

		return subnetPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetNetworkAclAssociationBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetNetworkAclAssociationBuilder_ec2ItemProvider subnetNetworkAclAssociationBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetNetworkAclAssociationBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetNetworkAclAssociationBuilder_ec2Adapter() {
		if (subnetNetworkAclAssociationBuilder_ec2ItemProvider == null) {
			subnetNetworkAclAssociationBuilder_ec2ItemProvider = new SubnetNetworkAclAssociationBuilder_ec2ItemProvider(
					this);
		}

		return subnetNetworkAclAssociationBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.MachineImageConfigBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MachineImageConfigBuilder_ec2ItemProvider machineImageConfigBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.MachineImageConfigBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMachineImageConfigBuilder_ec2Adapter() {
		if (machineImageConfigBuilder_ec2ItemProvider == null) {
			machineImageConfigBuilder_ec2ItemProvider = new MachineImageConfigBuilder_ec2ItemProvider(this);
		}

		return machineImageConfigBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.WindowsImagePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WindowsImagePropsBuilder_ec2ItemProvider windowsImagePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.WindowsImagePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWindowsImagePropsBuilder_ec2Adapter() {
		if (windowsImagePropsBuilder_ec2ItemProvider == null) {
			windowsImagePropsBuilder_ec2ItemProvider = new WindowsImagePropsBuilder_ec2ItemProvider(this);
		}

		return windowsImagePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InstancePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstancePropsBuilder_ec2ItemProvider instancePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InstancePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstancePropsBuilder_ec2Adapter() {
		if (instancePropsBuilder_ec2ItemProvider == null) {
			instancePropsBuilder_ec2ItemProvider = new InstancePropsBuilder_ec2ItemProvider(this);
		}

		return instancePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NatInstancePropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NatInstancePropsBuilder_ec2ItemProvider natInstancePropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NatInstancePropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNatInstancePropsBuilder_ec2Adapter() {
		if (natInstancePropsBuilder_ec2ItemProvider == null) {
			natInstancePropsBuilder_ec2ItemProvider = new NatInstancePropsBuilder_ec2ItemProvider(this);
		}

		return natInstancePropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PrivateSubnetPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivateSubnetPropsBuilder_ec2ItemProvider privateSubnetPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PrivateSubnetPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivateSubnetPropsBuilder_ec2Adapter() {
		if (privateSubnetPropsBuilder_ec2ItemProvider == null) {
			privateSubnetPropsBuilder_ec2ItemProvider = new PrivateSubnetPropsBuilder_ec2ItemProvider(this);
		}

		return privateSubnetPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PrivateSubnetAttributesBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivateSubnetAttributesBuilder_ec2ItemProvider privateSubnetAttributesBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PrivateSubnetAttributesBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivateSubnetAttributesBuilder_ec2Adapter() {
		if (privateSubnetAttributesBuilder_ec2ItemProvider == null) {
			privateSubnetAttributesBuilder_ec2ItemProvider = new PrivateSubnetAttributesBuilder_ec2ItemProvider(this);
		}

		return privateSubnetAttributesBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.InterfaceVpcEndpointBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceVpcEndpointBuilder_ec2ItemProvider interfaceVpcEndpointBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.InterfaceVpcEndpointBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceVpcEndpointBuilder_ec2Adapter() {
		if (interfaceVpcEndpointBuilder_ec2ItemProvider == null) {
			interfaceVpcEndpointBuilder_ec2ItemProvider = new InterfaceVpcEndpointBuilder_ec2ItemProvider(this);
		}

		return interfaceVpcEndpointBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.ConfigureNatOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigureNatOptionsBuilder_ec2ItemProvider configureNatOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.ConfigureNatOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigureNatOptionsBuilder_ec2Adapter() {
		if (configureNatOptionsBuilder_ec2ItemProvider == null) {
			configureNatOptionsBuilder_ec2ItemProvider = new ConfigureNatOptionsBuilder_ec2ItemProvider(this);
		}

		return configureNatOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetBuilder_ec2ItemProvider subnetBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetBuilder_ec2Adapter() {
		if (subnetBuilder_ec2ItemProvider == null) {
			subnetBuilder_ec2ItemProvider = new SubnetBuilder_ec2ItemProvider(this);
		}

		return subnetBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.AclIcmpBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AclIcmpBuilder_ec2ItemProvider aclIcmpBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.AclIcmpBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAclIcmpBuilder_ec2Adapter() {
		if (aclIcmpBuilder_ec2ItemProvider == null) {
			aclIcmpBuilder_ec2ItemProvider = new AclIcmpBuilder_ec2ItemProvider(this);
		}

		return aclIcmpBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NetworkAclBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkAclBuilder_ec2ItemProvider networkAclBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NetworkAclBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAclBuilder_ec2Adapter() {
		if (networkAclBuilder_ec2ItemProvider == null) {
			networkAclBuilder_ec2ItemProvider = new NetworkAclBuilder_ec2ItemProvider(this);
		}

		return networkAclBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.CommonNetworkAclEntryOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommonNetworkAclEntryOptionsBuilder_ec2ItemProvider commonNetworkAclEntryOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.CommonNetworkAclEntryOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommonNetworkAclEntryOptionsBuilder_ec2Adapter() {
		if (commonNetworkAclEntryOptionsBuilder_ec2ItemProvider == null) {
			commonNetworkAclEntryOptionsBuilder_ec2ItemProvider = new CommonNetworkAclEntryOptionsBuilder_ec2ItemProvider(
					this);
		}

		return commonNetworkAclEntryOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GatewayVpcEndpointOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatewayVpcEndpointOptionsBuilder_ec2ItemProvider gatewayVpcEndpointOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GatewayVpcEndpointOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGatewayVpcEndpointOptionsBuilder_ec2Adapter() {
		if (gatewayVpcEndpointOptionsBuilder_ec2ItemProvider == null) {
			gatewayVpcEndpointOptionsBuilder_ec2ItemProvider = new GatewayVpcEndpointOptionsBuilder_ec2ItemProvider(
					this);
		}

		return gatewayVpcEndpointOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.LookupMachineImageBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LookupMachineImageBuilder_ec2ItemProvider lookupMachineImageBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.LookupMachineImageBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLookupMachineImageBuilder_ec2Adapter() {
		if (lookupMachineImageBuilder_ec2ItemProvider == null) {
			lookupMachineImageBuilder_ec2ItemProvider = new LookupMachineImageBuilder_ec2ItemProvider(this);
		}

		return lookupMachineImageBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.PortPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortPropsBuilder_ec2ItemProvider portPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.PortPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortPropsBuilder_ec2Adapter() {
		if (portPropsBuilder_ec2ItemProvider == null) {
			portPropsBuilder_ec2ItemProvider = new PortPropsBuilder_ec2ItemProvider(this);
		}

		return portPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SecurityGroupImportOptionsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityGroupImportOptionsBuilder_ec2ItemProvider securityGroupImportOptionsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SecurityGroupImportOptionsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityGroupImportOptionsBuilder_ec2Adapter() {
		if (securityGroupImportOptionsBuilder_ec2ItemProvider == null) {
			securityGroupImportOptionsBuilder_ec2ItemProvider = new SecurityGroupImportOptionsBuilder_ec2ItemProvider(
					this);
		}

		return securityGroupImportOptionsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.ConnectionsPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionsPropsBuilder_ec2ItemProvider connectionsPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.ConnectionsPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionsPropsBuilder_ec2Adapter() {
		if (connectionsPropsBuilder_ec2ItemProvider == null) {
			connectionsPropsBuilder_ec2ItemProvider = new ConnectionsPropsBuilder_ec2ItemProvider(this);
		}

		return connectionsPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.EbsDeviceOptionsBaseBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EbsDeviceOptionsBaseBuilder_ec2ItemProvider ebsDeviceOptionsBaseBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.EbsDeviceOptionsBaseBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEbsDeviceOptionsBaseBuilder_ec2Adapter() {
		if (ebsDeviceOptionsBaseBuilder_ec2ItemProvider == null) {
			ebsDeviceOptionsBaseBuilder_ec2ItemProvider = new EbsDeviceOptionsBaseBuilder_ec2ItemProvider(this);
		}

		return ebsDeviceOptionsBaseBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SubnetAttributesBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubnetAttributesBuilder_ec2ItemProvider subnetAttributesBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SubnetAttributesBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubnetAttributesBuilder_ec2Adapter() {
		if (subnetAttributesBuilder_ec2ItemProvider == null) {
			subnetAttributesBuilder_ec2ItemProvider = new SubnetAttributesBuilder_ec2ItemProvider(this);
		}

		return subnetAttributesBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.SecurityGroupBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityGroupBuilder_ec2ItemProvider securityGroupBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.SecurityGroupBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityGroupBuilder_ec2Adapter() {
		if (securityGroupBuilder_ec2ItemProvider == null) {
			securityGroupBuilder_ec2ItemProvider = new SecurityGroupBuilder_ec2ItemProvider(this);
		}

		return securityGroupBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GatewayVpcEndpointBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatewayVpcEndpointBuilder_ec2ItemProvider gatewayVpcEndpointBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GatewayVpcEndpointBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGatewayVpcEndpointBuilder_ec2Adapter() {
		if (gatewayVpcEndpointBuilder_ec2ItemProvider == null) {
			gatewayVpcEndpointBuilder_ec2ItemProvider = new GatewayVpcEndpointBuilder_ec2ItemProvider(this);
		}

		return gatewayVpcEndpointBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.NetworkAclEntryBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkAclEntryBuilder_ec2ItemProvider networkAclEntryBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.NetworkAclEntryBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAclEntryBuilder_ec2Adapter() {
		if (networkAclEntryBuilder_ec2ItemProvider == null) {
			networkAclEntryBuilder_ec2ItemProvider = new NetworkAclEntryBuilder_ec2ItemProvider(this);
		}

		return networkAclEntryBuilder_ec2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link ec2.GatewayVpcEndpointPropsBuilder_ec2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatewayVpcEndpointPropsBuilder_ec2ItemProvider gatewayVpcEndpointPropsBuilder_ec2ItemProvider;

	/**
	 * This creates an adapter for a {@link ec2.GatewayVpcEndpointPropsBuilder_ec2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGatewayVpcEndpointPropsBuilder_ec2Adapter() {
		if (gatewayVpcEndpointPropsBuilder_ec2ItemProvider == null) {
			gatewayVpcEndpointPropsBuilder_ec2ItemProvider = new GatewayVpcEndpointPropsBuilder_ec2ItemProvider(this);
		}

		return gatewayVpcEndpointPropsBuilder_ec2ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

}
